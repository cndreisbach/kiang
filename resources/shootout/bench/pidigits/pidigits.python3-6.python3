# The Computer Language Benchmarks Game
# http://shootout.alioth.debian.org/
# transliterated from Mike Pall's Lua program
# contributed by Mario Pernici
# modified to run on Pypy by Joseph LaFata
# rewritten to use gmp by Joseph LaFata

import ctypes
from ctypes.util import find_library
from sys import argv

try:
    N = int(argv[1])
except:
    N = 100

_libgmp = ctypes.CDLL(find_library("gmp"))

_mpz_init_set_si = _libgmp.__gmpz_init_set_si
_mpz_add = _libgmp.__gmpz_add
_mpz_add_ui = _libgmp.__gmpz_add_ui
_mpz_sub = _libgmp.__gmpz_sub
_mpz_mul = _libgmp.__gmpz_mul
_mpz_mul_si = _libgmp.__gmpz_mul_si
_mpz_mul_ui = _libgmp.__gmpz_mul_ui
_mpz_div_mod = _libgmp.__gmpz_fdiv_qr
_mpz_cmp = _libgmp.__gmpz_cmp
_mpz_get_si = _libgmp.__gmpz_get_si

class mpz_t_struct(ctypes.Structure):
    _fields_ = [("mp_alloc", ctypes.c_int),
                ("mp_size", ctypes.c_int),
                ("mp_d", ctypes.c_void_p)]

class mpz(object):
    def __init__(self, init_value=0):
        self._mpz = mpz_t_struct()
        self._as_parameter_ = ctypes.byref(self._mpz)
        _mpz_init_set_si(self, init_value)

def main():
    i = k = ns = 0
    k1 = 1
    n,a,d,t,u = map(mpz, (1,0,1,0,0))
    while(1):
        k += 1
        _mpz_mul_ui(t, n, 2)
        _mpz_mul_si(n, n, k)
        _mpz_add(a, a, t)
        k1 += 2
        _mpz_mul_si(a, a, k1)
        _mpz_mul_si(d, d, k1)
        if _mpz_cmp(a, n) >= 0:
            _mpz_mul_ui(t, n, 3)
            _mpz_add(t, t, a)
            _mpz_div_mod(t, u, t, d)
            _mpz_add(u, u, n)
            if _mpz_cmp(d, u) > 0:
                ns = ns*10 + _mpz_get_si(t)
                i += 1
                if i % 10 == 0:
                    print ('%010d\t:%d' % (ns, i))
                    ns = 0
                if i == N:
                    break
                _mpz_mul(t, t, d)
                _mpz_sub(a, a, t)
                _mpz_mul_ui(a, a, 10)
                _mpz_mul_ui(n, n, 10)

main()
